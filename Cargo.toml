[workspace]
members = [
  "crates/ah-core",
  "crates/ah-local-db",
  "crates/ah-repo",
  "crates/ah-fs-snapshots",
  "crates/ah-fs-snapshots-traits",
  "crates/ah-fs-snapshots-zfs",
  "crates/ah-fs-snapshots-btrfs",
  "crates/ah-fs-snapshots-git",
  "crates/agentfs-fskit-sys",
  "crates/agentfs-fskit-bridge",
  "crates/ah-sandbox",
  "crates/ah-sandbox-linux",
  "crates/ah-sandbox-macos",
  "crates/ah-fs-snapshots-daemon",
  # Sandbox crates
  "crates/sandbox-core",
  "crates/sandbox-fs",
  "crates/sandbox-seccomp",
  "crates/sandbox-cgroups",
  "crates/sandbox-net",
  "crates/sandbox-devices",
  "crates/sandbox-proto",
  "crates/sbx-helper",
  # AgentFS crates
  "crates/agentfs-core",
  "crates/agentfs-proto",
  "crates/agentfs-fuse-host",
  "crates/agentfs-winfsp-host",
  "crates/agentfs-fskit-host",
  "crates/agentfs-ffi",
  # REST API and TUI
  "crates/ah-rest-api-contract",
  "crates/ah-rest-client",
  "crates/ah-client-api",
  "crates/ah-test-scenarios",
  "crates/ah-rest-client-mock",
  "crates/ah-mux-core",
  "crates/ah-mux",
  "crates/ah-tui-multiplexer",
  "crates/ah-tui-test",
  "crates/ah-tui",
  "crates/ah-macos-launcher",
  # CLI
  "crates/ah-cli",
  # Integration tests
  "tests/sandbox-integration",
  "tests/cgroup-enforcement",
  "tests/overlay-enforcement",
  "tests/network-enforcement",
  "tests/debugging-enforcement",
  "tests/container-enforcement",
  "tests/vm-enforcement",
]
resolver = "2"

[workspace.dependencies]
# Core async runtime
tokio = { version = "1.47", features = ["full"] }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# CLI parsing
clap = { version = "4.5", features = ["derive"] }

# Database
rusqlite = { version = "0.37", features = ["bundled"] }

# Logging
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# System interfaces
nix = "0.30"

# Async traits
async-trait = "0.1"

# Testing
tempfile = "3.0"

# HTTP client for connectivity checks
ureq = { version = "2.0", features = ["json"] }

# VCS repository abstraction
chrono = { version = "0.4", features = ["serde"] }

# SSZ serialization for daemon
ethereum_ssz = "0.8"
ethereum_ssz_derive = "0.8"

# HTTP client for REST API
reqwest = { version = "0.12", features = ["json", "stream"] }

# URL parsing
url = "2.5"

# Base64 encoding
base64 = "0.22"

# SSE client
eventsource-client = "0.13"

# Terminal UI
ratatui = "0.29"
crossterm = "0.29"

# Validation
validator = { version = "0.20", features = ["derive"] }

# UUID generation
uuid = { version = "1.18", features = ["v4", "serde"] }

# Futures utilities
futures = "0.3"

# Unicode width calculation
unicode-width = "0.2"

[profile.release]
lto = true
codegen-units = 1
panic = "abort"
