{
  "name": "agents-workflow",
  "build": {
    "dockerfile": "Dockerfile"
  },
  "features": {},
  "initializeCommand": "",
  "customizations": {
    "vscode": {
      "extensions": [
        "GitHub.copilot",
        "GitHub.copilot-chat",
        "ms-vscode.vscode-json",
        "rebornix.ruby",
        "shopify.ruby-lsp"
      ],
      "settings": {
        "github.copilot.enable": {
          "*": true,
          "yaml": true,
          "plaintext": true,
          "markdown": true,
          "ruby": true,
          "nix": true
        },
        "github.copilot.chat.codeGeneration.useCodebaseContext": true,
        "github.copilot.chat.experimental.codeActions": true,
        "github.copilot.chat.autoApprove": true,
        "github.copilot.chat.experimental.generateTests": true,
        "github.copilot.chat.experimental.autoApprove": true,
        "github.copilot.advanced": {
          "secret_key": "github.copilot.autoApprove",
          "length": 1
        },
        "github.copilot.editor.enableAutoCompletions": true,
        "github.copilot.editor.enableCodeActions": true,
        "github.copilot.terminal.enable": true,
        "terminal.integrated.defaultProfile.linux": "bash",
        "terminal.integrated.profiles.linux": {
          "bash": {
            "path": "/bin/bash"
          }
        }
      }
    }
  },
  "remoteUser": "vscode",
  "postCreateCommand": "nix develop",
  "postStartCommand": "sync-cargo-caches",
  "forwardPorts": [],
  "mounts": [
    // Mount host Nix store as read-only to share existing packages
    // This allows the container to access packages already built on the host
    "source=/nix/store,target=/nix/host-store,type=bind,readonly",

    // Persistent Nix store using named volume - preserves build-time content
    // Named volumes retain the initial directory structure from the Docker image
    // unlike bind mounts which always overlay empty host directories
    "source=agents-workflow-nix-store,target=/nix/store,type=volume",

    // Mount host Cargo cache as read-only for sharing downloaded crates
    // This allows reusing .crate files and registry index from the host
    "source=${localEnv:HOME}/.cargo,target=/host-cargo,type=bind,readonly",

    // Persistent Cargo cache using named volume - preserves build-time directory structure
    // Named volumes retain the initial directory structure from the Docker image
    // and provide persistence for container-specific compiled artifacts
    "source=agents-workflow-cargo-cache,target=/home/vscode/.cargo,type=volume"
  ],

  // Propagate environment variables from host for API keys and credentials
  // Add any API keys or secrets you need from your host environment
  "containerEnv": {
    // OpenAI API configuration
    "OPENAI_API_KEY": "${localEnv:OPENAI_API_KEY}",
    "OPENAI_ORG_ID": "${localEnv:OPENAI_ORG_ID}",

    // GitHub API for Copilot and repository access
    "GITHUB_TOKEN": "${localEnv:GITHUB_TOKEN}",

    // Generic API key patterns - uncomment and modify as needed
    // "API_KEY": "${localEnv:API_KEY}",
    // "SECRET_KEY": "${localEnv:SECRET_KEY}",

    // Development environment indicators
    "DEVELOPMENT": "true",
    "CONTAINER_ENV": "devcontainer"
  }
}
