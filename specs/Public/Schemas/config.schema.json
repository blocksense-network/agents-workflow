{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://schamas.blocksense.network/agent-harbor/config.schema.json",
  "title": "Agent Harbor Configuration",
  "type": "object",
  "additionalProperties": false,
  "$defs": {
    "LogLevel": { "type": "string", "enum": ["debug", "info", "warn", "error"] },
    "Mode": { "type": "string", "enum": ["auto", "local", "rest"] },
    "Multiplexer": { "type": "string", "enum": ["tmux", "zellij", "screen"] },
    "Vcs": { "type": "string", "enum": ["git", "hg", "bzr", "fossil"] },
    "DevEnv": { "type": "string", "enum": ["nix", "spack", "bazel", "none", "no", "custom"] },
    "TaskRunner": { "type": "string", "enum": ["just", "make"] },
    "AgentName": {
      "type": "string",
      "enum": [
        "generic",
        "codex",
        "copilot",
        "claude",
        "gemini",
        "cursor",
        "windsurf",
        "zed",
        "cline",
        "roo",
        "jetbrains",
        "openhands"
      ]
    },
    "SupportedAgents": {
      "oneOf": [
        { "type": "string", "const": "all" },
        { "type": "array", "items": { "$ref": "#/$defs/AgentName" }, "uniqueItems": true }
      ]
    },
    "YesNo": { "type": "boolean" },
    "Uri": { "type": "string", "format": "uri" },
    "UiDefault": { "type": "string", "enum": ["tui", "webui"] },
    "SnapshotProvider": {
      "type": "string",
      "enum": ["auto", "zfs", "btrfs", "agentfs", "git", "disable"]
    },
    "WorkingCopy": { "type": "string", "enum": ["auto", "cow-overlay", "worktree", "in-place"] }
  },
  "properties": {
    "ui": { "$ref": "#/$defs/UiDefault" },
    "tui": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "defaultMode": { "$ref": "#/$defs/Mode" }
      }
    },
    "terminal": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "multiplexer": { "$ref": "#/$defs/Multiplexer" }
      }
    },
    "editor": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "default": { "type": "string", "minLength": 1 }
      }
    },
    "tui": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "recording": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "scope": { "type": "string", "enum": ["agent-pane", "full-window"] }
          }
        }
      }
    },
    "sandbox": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "default": { "type": "string", "enum": ["local", "devcontainer", "vm", "disabled"] }
      }
    },
    "network": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "apiUrl": { "$ref": "#/$defs/Uri" }
      }
    },
    "browserAutomation": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "enabled": { "type": "boolean" },
        "profile": { "type": "string" },
        "chatgptUsername": { "type": "string" }
      }
    },
    "codex": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "workspace": { "type": "string" }
      }
    },
    "repo": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "supportedAgents": { "$ref": "#/$defs/SupportedAgents" },
        "init": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "vcs": { "$ref": "#/$defs/Vcs" },
            "devenv": { "$ref": "#/$defs/DevEnv" },
            "devcontainer": { "$ref": "#/$defs/YesNo" },
            "direnv": { "$ref": "#/$defs/YesNo" },
            "taskRunner": { "$ref": "#/$defs/TaskRunner" }
          }
        }
      }
    },
    "logLevel": { "$ref": "#/$defs/LogLevel" },
    "mode": { "$ref": "#/$defs/Mode" },
    "fs-snapshots": { "$ref": "#/$defs/SnapshotProvider" },
    "working-copy": { "$ref": "#/$defs/WorkingCopy" }
  }
}

// TODO: After all the other edits are done, collect all configuration options mentioned in the specs and make sure this schema is up to date.
